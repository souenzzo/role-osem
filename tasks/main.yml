---
# HOWTO: Recompile without chage key: ` mv log/production.log /bkp `
# HOWTO: Generate a new key: ` mv config/key /bkp; mv log/production.log /bkp `
- name: Create dir
  file:
    path: "{{ git_dest }}"
    owner: "{{ builder.name }}"
    group: "{{ builder.group }}"
    state: "directory"

- name: Install bundler
  become: yes
  become_user: "{{ builder.name }}"
  gem:
    name: bundler

- name: Get gems user_dir
  become: yes
  become_user: "{{ builder.name }}"
  register: print_Gem_user_dir
  command: "ruby -e 'print Gem.user_dir'"
  changed_when: "print_Gem_user_dir.rc != 0"

- name: Bundler path
  set_fact:
    bundler_exec: "{{ print_Gem_user_dir.stdout }}/bin/bundler"

- name: "clone @{{ git_version }}"
  become: yes
  become_user: "{{ builder.name }}"
  git:
    repo: "{{ git_repo }}"
    dest: "{{ git_dest }}"
    version: "{{ git_version }}"
  environment: "{{ git_env }}"

- name: running bundler
  become: yes
  become_user: "{{ builder.name }}"
  bundler:
    chdir: "{{ git_dest }}"
    deployment_mode: yes
    executable: "{{ bundler_exec }}"

- name: Get secret
  become: yes
  become_user: "{{ builder.name }}"
  register: secret_key_command
  shell: "cat ./config/key || {{ bundler_exec }} exec rake secret | tee ./config/key"
  environment:
    RAILS_ENV: "{{ RAILS_ENV }}"
  changed_when: False
  args:
    chdir: "{{ git_dest }}"

- name: Set key fact
  set_fact:
    secret_key: "{{ secret_key_command.stdout }}"

- name: Apply settings
  template:
    src: "./templates/{{ item }}.j2"
    dest: "{{ git_dest }}/{{ item }}"
    owner: "{{ builder.name }}"
    group: "{{ runner.group }}"
    mode: "440"
  with_items:
  - "./.env"
  - "./config/database.yml"
  - "./config/secrets.yml"

- name: Create some dirs/set uid
  file:
    name: "{{ git_dest }}/{{ item }}"
    owner: "{{ builder.name }}"
    group: "{{ runner.group }}"
    mode: "770"
    state: "directory"
  with_items: "{{ rwdir }}"

- name: Bundle db:setup
  become: yes
  become_user: "operador"
  shell: "{{ bundler_exec }} exec rake db:setup RAILS_ENV={{ RAILS_ENV }} &> ./log/setup.log"
  args:
    chdir: "{{ git_dest }}"
    creates: "./log/setup.log"

- name: Bundle db:migrate assets:precompile
  become: yes
  become_user: "operador"
  shell: "{{ bundler_exec }} exec rake db:migrate assets:precompile  RAILS_ENV={{ RAILS_ENV }} &> ./log/{{ RAILS_ENV }}.log"
  args:
    chdir: "{{ git_dest }}"
    creates: "./log/{{ RAILS_ENV }}.log"


- name: Apache site
  template:
    src: "./templates/000-osem.conf.j2"
    dest: "{{ sites_dir }}/000-osen.conf"

