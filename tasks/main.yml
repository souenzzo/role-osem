---
# HOWTO: Recompile without chage key: ` mv log/production.log /bkp `
# HOWTO: Generate a new key: ` mv config/key /bkp; mv log/production.log /bkp `

- name: Install bundler
  gem:
    name: bundler

- name: Get Gem.user_dir
  register: cmd_gem
  command: ruby -e 'print Gem.user_dir'
  changed_when: "cmd_gem.rc != 0"

- name: Bundler executable
  set_fact:
    bundler: "{{ cmd_gem.stdout }}/bin/bundler"

- name: "clone @{{ git_version }}"
  git:
    repo: "{{ git_repo }}"
    dest: "{{ git_dest }}"
    version: "{{ git_version }}"
  environment: "{{ git_env }}"

- name: running bundler
  bundler:
    chdir: "{{ git_dest }}"
    deployment_mode: yes
    executable: "{{ bundler }}"

- name: check secrets.yml
  command: grep 'secret_key_base' ./config/secrets.yml
  args:
    chdir: "{{ git_dest }}"
  register: has_secret
  changed_when: no
  ignore_errors: yes

- name: get secret from file
  command: awk '/secret_key_base/{print $2}' ./config/secrets.yml
  args:
    chdir: "{{ git_dest }}"
  register: gen_secret
  when: has_secret.rc == 0


- name: Gen a new secret
  command: "{{ bundler }} exec rake secret"
  args:
    chdir: "{{ git_dest }}"
  register: get_secret
  when: has_secret.rc != 0

- name: Set new key to 'secret_key'
  set_fact:
    secret_key: "{{ gen_secret.stdout if has_secret.rc == 0 else get_secret.stdout }}"

- name: Apply settings
  template:
    src: "./templates/{{ item }}.j2"
    dest: "{{ git_dest }}/{{ item }}"
    group: "{{ run_group }}"
    mode: "440"
  with_items:
  - "./.env"
  - "./config/database.yml"
  - "./config/secrets.yml"

- name: Create some dirs/set uid
  file:
    name: "{{ git_dest }}/{{ item }}"
    group: "{{ run_group }}"
    mode: "770"
    state: "directory"
  with_items: "{{ rwdir }}"

- name: Bundle db:setup
  shell: "{{ bundler }} exec rake db:setup RAILS_ENV={{ RAILS_ENV }} > ./log/setup.log 2> ./log/setup.err.log"
  args:
    chdir: "{{ git_dest }}"
    creates: "./log/setup.log"

- name: Bundle db:migrate assets:precompile
  shell: "{{ bundler }} exec rake db:migrate assets:precompile  RAILS_ENV={{ RAILS_ENV }} > ./log/{{ RAILS_ENV }}.log 2> ./log/{{ RAILS_ENV }}.err.log"
  args:
    chdir: "{{ git_dest }}"
    creates: "./log/{{ RAILS_ENV }}.log"


- name: Apache site
  template:
    src: "./templates/000-osem.conf.j2"
    dest: "{{ ansible_env.HOME }}/000-osen.conf"

